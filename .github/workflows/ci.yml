name: CI

on: [pull_request]

jobs:
  lint-flake8:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository at the current branch
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 .github/scripts/compile_requirements.py
          pip install -r requirements.txt
          pip install -r requirements-ci.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --format="::warning file=%(path)s,line=%(row)d,col=%(col)d::%(text)s" --exit-zero --max-complexity=10 --max-line-length=127

  lint-black:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository at the current branch
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 .github/scripts/compile_requirements.py
          pip install -r requirements.txt
          pip install -r requirements-ci.txt
      - name: Lint with black
        run: |
          black --diff .

  lint-pylint:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository at the current branch
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 .github/scripts/compile_requirements.py
          pip install -r requirements.txt
          pip install -r requirements-ci.txt
      - name: Lint with pylint
        run: |
          pylint --msg-template='::warning file={path},line={line},col={column}::{msg}' */ || exit 0

  lint-isort:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository at the current branch
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 .github/scripts/compile_requirements.py
          pip install -r requirements.txt
          pip install -r requirements-ci.txt
      - name: Lint with isort
        run: |
          isort --check --diff .

  check-json:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository at the current branch
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 .github/scripts/compile_requirements.py
          pip install -r requirements.txt
          pip install -r requirements-ci.txt
      - name: Check cog and repo JSON files against schema
        run: python3 .github/scripts/json_checker.py
